SELECT * FROM M4S_I000011 WHERE TABLE_ID = 'M4S_C210000'


SELECT *
FROM M4S_I002020


MERGE INTO M4S_I002020 T1
USING
(
  SELECT  'dt-snop02'		AS USER_CD
        , '김도희'		AS USER_NM
        , 'dt-snop02'			AS EMP_ID
        , '21100'			AS ORG_CD
        , NULL	AS USER_JOB_CD
        , 'ENT001'		AS PROJECT_CD
        , NULL		AS MNGR_YN
        , NULL		AS PW_RESET
        , NULL		AS LOCK_FLAG
        , 'Y'			AS USE_YN
        , CASE WHEN 'Y' = 'Y' THEN 'N'
  			   WHEN 'Y' = 'N' THEN 'Y'
  			   ELSE 'N' END AS DEL_YN
        , NULL	AS PWD_FAILCNT
)T2
ON (
         T1.USER_CD  = T2.USER_CD
  	AND  T1.EMP_ID 	 = T2.EMP_ID
    )
WHEN MATCHED THEN
UPDATE SET
		   ORG_CD			= T2.ORG_CD
          ,PROJECT_CD		= T2.PROJECT_CD
          ,USE_YN			= T2.USE_YN
          ,DEL_YN		  	= T2.DEL_YN
          ,MODIFY_USER_CD 	= 'dev07'
          ,MODIFY_DATE 		= GETDATE()

WHEN NOT MATCHED THEN
INSERT
(
         PROJECT_CD
		,USER_CD
  		,USER_NM
  		,EMP_ID
		,ORG_CD
  		,USER_JOB_CD
		,DEL_YN
  		,USE_YN
        ,MNGR_YN
		,CREATE_USER_CD
  		,CREATE_DATE
)
VALUES(
		 T2.PROJECT_CD
        ,T2.USER_CD
  		,T2.USER_NM
  		,T2.EMP_ID
		,T2.ORG_CD
  		,T2.USER_JOB_CD
		,T2.DEL_YN
  		,T2.USE_YN
        ,T2.MNGR_YN
		,'dev07'
  		,GETDATE()
  );


    select * from M4S_I002020 where user_cd = 'dt-snop08'








/**********************************
  작성자  	: 박은진
  작성일자 	: 2021.10.8
  [TABLE]
 M4S_I110410 -- 수요예측 모델 정확도
 M4S_I103010 -- 알고리즘 관리
***********************************/

WITH SCORE
AS (
        SELECT SCORE.PROJECT_CD
             , SCORE.DATA_VRSN_CD
             , SCORE.DIVISION_CD
			 , SCORE.ITEM_ATTR01_CD
             , SCORE.ITEM_ATTR01_NM
			 , SCORE.ITEM_ATTR02_CD
             , SCORE.ITEM_ATTR02_NM
			 , SCORE.ITEM_ATTR03_CD
             , SCORE.ITEM_ATTR03_NM
			 , SCORE.ITEM_ATTR04_CD
             , SCORE.ITEM_ATTR04_NM
			 , SCORE.ITEM_CD
             , SCORE.ITEM_NM
			 , SCORE.CUST_GRP_CD
             , SCORE.CUST_GRP_NM
			 , SCORE.FKEY
             , SCORE.LEVEL
             , CASE
                   WHEN SCORE.LEVEL = 'BRAND' THEN SCORE.ITEM_ATTR03_CD
                   WHEN SCORE.LEVEL = 'ITEM' THEN SCORE.ITEM_ATTR04_CD
                   ELSE SCORE.ITEM_CD
            END AS LEVEL_CD
             , SCORE.STAT_CD
             , ALGO.STAT_NM
             , SCORE.RMSE
        FROM (
                 SELECT PROJECT_CD
                      , DATA_VRSN_CD
                      , DIVISION_CD
                      , ITEM_ATTR01_CD
                      , ITEM_ATTR01_NM
                      , ITEM_ATTR02_CD
                      , ITEM_ATTR02_NM
                      , ITEM_ATTR03_CD
                      , ITEM_ATTR03_NM
                      , ITEM_ATTR04_CD
                      , ITEM_ATTR04_NM
                      , ITEM_CD
                      , ITEM_NM
                      , CUST_GRP_CD
                      , CUST_GRP_NM
                      , FKEY
                      , CASE
                            WHEN FKEY LIKE '%C1-P3%' THEN 'BRAND'
                            WHEN FKEY LIKE '%C1-P4%' THEN 'ITEM'
                            WHEN FKEY LIKE '%C1-P5%' THEN 'SKU'
                     END AS LEVEL
                      , STAT_CD
                      , RMSE
                 FROM M4S_O110610
				 WHERE 1 = 1
				   AND DATA_VRSN_CD = '20201228-20211226'
				   AND DIVISION_CD = 'SELL_IN'
				   AND ITEM_ATTR01_CD IN ('P1')
-- 				   AND ITEM_ATTR02_CD IN (@:VS_CB_LINE)
-- 				   AND ITEM_ATTR03_CD IN (@:VS_CB_BRAND)
				   --AND ITEM_ATTR04_CD IN (@:VS_CB_ITEM)
				   AND FKEY LIKE 'C1-P4' + '%'
             ) SCORE
    LEFT OUTER JOIN ( --알고리즘명 추출
               SELECT STAT_CD
                    , STAT_NM
                 FROM M4S_I103010
                WHERE 1=1
                  AND DIVISION_CD = 'FCST'
                  AND USE_YN = 'Y'
              ) ALGO
ON SCORE.STAT_CD = ALGO.STAT_CD



)
SELECT PROJECT_CD
     , DATA_VRSN_CD
	 , DIVISION_CD
	 , ITEM_ATTR01_NM
	 , ITEM_ATTR02_NM
	 , ITEM_ATTR03_NM
     , ITEM_ATTR04_NM
	 , ITEM_NM
	 , SCORE.CUST_GRP_CD
	 , CUST_GRP_NM
     , SCORE.STAT_CD
     , CASE WHEN RANK.STAT_CD IS NULL THEN '' ELSE 'M' END AS MIN_STAT
	 , STAT_NM
	 , FKEY
     , LEVEL
     , RMSE
FROM SCORE
LEFT OUTER JOIN ( --알고리즘명 추출
               SELECT STAT_CD
                    , STAT_NM
                 FROM M4S_I103010
                WHERE 1=1
                  AND DIVISION_CD = 'FCST'
                  AND USE_YN = 'Y'
              ) ALGO
ON SCORE.STAT_CD = ALGO.STAT_CD
LEFT OUTER JOIN (
                SELECT LEVEL_CD
                    , CUST_GRP_CD
					, STAT_CD
                FROM (
                    SELECT LEVEL_CD
                            , CUST_GRP_CD
							, STAT_CD
                            , RMSE
                            , DENSE_RANK() over (PARTITION BY LEVEL_CD, CUST_GRP_CD ORDER BY RMSE) AS RANK
                       FROM (
					   		SELECT LEVEL_CD
					   		    , CUST_GRP_CD
								, STAT_CD
								, SUM(RMSE) RMSE
							FROM SCORE
							GROUP BY LEVEL_CD
							    , CUST_GRP_CD
								, STAT_CD
					   ) SCORE
                    ) RANK
                WHERE 1=1
                AND RANK = 1
                ) RANK
ON  SCORE.LEVEL_CD = RANK.LEVEL_CD
AND SCORE.CUST_GRP_CD = RANK.CUST_GRP_CD
AND SCORE.STAT_CD = RANK.STAT_CD


SELECT * FROM M4S_O110610


SELECT
	MSH."DIVISION_CD" AS "DIVISION_CD"
	, MSH."ERR_CD" AS "ERR_CD"
	, MSH."ERR_GRP_NM" AS "ERR_GRP_NM"
	, MSH."ERR_NM" AS "ERR_NM"
	, MSH."WEEK" AS "WEEK"
	, MSH."YYMMDD" AS "YYMMDD"
	, COUNT(MSH."SEQ") AS "SEQ"
 FROM ( SELECT MAIN.DIVISION_CD
	, MAIN.YYMMDD
	, CAL.WEEK
	, CAL.PART_WEEK
	, CAL.YYMM
	, CAL.YY
	, MAIN.ERR_GRP_CD
	, ERR_GRP.ERR_GRP_NM
	, MAIN.ERR_CD
	, ERR.ERR_NM
	, MAIN.SEQ
FROM (
		SELECT DIVISION_CD
			,YYMMDD
			,ERR_GRP_CD
			,ERR_CD
			,SEQ
		FROM M4S_I002174
		WHERE 1=1
			AND PROJECT_CD = 'ENT001'
			AND DATA_VRSN_CD = ''
			AND DIVISION_CD IN ('SELL_IN','SELL_OUT' )
			AND ERR_GRP_CD IN ('ERR_GRP1','ERR_GRP2')
			AND ERR_CD IN ('ERR001','ERR003')
	) MAIN
	, (

			SELECT COMM_DTL_CD    AS ERR_GRP_CD
				, COMM_DTL_CD_NM AS ERR_GRP_NM
			FROM M4S_I002011
			WHERE 1=1
			AND PROJECT_CD = 'ENT001'
			AND COMM_CD = 'ERR_GRP_CD'
			AND COMM_DTL_CD  IN ( 'ERR_GRP1','ERR_GRP2' )

		) ERR_GRP
	, (

		SELECT COMM_DTL_CD    AS ERR_CD
		 	 , COMM_DTL_CD_NM AS ERR_NM
		FROM M4S_I002011
		WHERE 1=1
			AND PROJECT_CD = 'ENT001'
			AND COMM_CD = 'ERR_CD'
			AND ATTR01_VAL  IN ( 'ERR_GRP1','ERR_GRP2' )
			AND COMM_DTL_CD IN ( 'ERR001','ERR003' )

	) ERR
	, (
		SELECT YYMMDD
			, WEEK
			, PART_WEEK
			, YYMM
			, YY
		FROM M4S_I002030
		WHERE PROJECT_CD = 'ENT001'
	) CAL
WHERE MAIN.ERR_GRP_CD = ERR_GRP.ERR_GRP_CD
 AND MAIN.ERR_CD = ERR.ERR_CD
 AND MAIN.YYMMDD = CAL.YYMMDD
 ) MSH
  GROUP BY MSH."DIVISION_CD"
	,MSH."ERR_CD"
	,MSH."ERR_GRP_NM"
	,MSH."ERR_NM"
	,MSH."WEEK"
	,MSH."YYMMDD"



select *
from M4S_I110400
where 1=1
and left(fkey,5) = 'C1-P3'
and CUST_GRP_CD = '1065'
and ITEM_ATTR03_CD = 'P107001'
and STAT_CD = 'HW'


SELECT DIVISION_CD
	 , RESULT.ITEM_ATTR01_CD
	 , RESULT.ITEM_ATTR01_NM
	 , RESULT.ITEM_ATTR02_CD
	 , RESULT.ITEM_ATTR02_NM
	 , RESULT.ITEM_ATTR03_CD
	 , RESULT.ITEM_ATTR03_NM
	 , RESULT.ITEM_ATTR04_CD
	 , RESULT.ITEM_ATTR04_NM
	 , RESULT.ITEM_CD
	 , RESULT.ITEM_NM
	 , RESULT.CUST_GRP_CD
	 , RESULT.CUST_GRP_NM
	 , '예측' as GUBUN
	 , RESULT.STAT_CD
     , ALGO.STAT_NM
     , RESULT.WEEK
     , RESULT.YYMMDD
	 , YY
	 , YYMM
	 , RESULT.RESULT_SALES AS 실적
	 , RESULT.FKEY
FROM (
		SELECT DIVISION_CD
			 , ITEM_ATTR01_CD
			 , ITEM_ATTR01_NM
			 , ITEM_ATTR02_CD
			 , ITEM_ATTR02_NM
			 , ITEM_ATTR03_CD
			 , ITEM_ATTR03_NM
			 , ITEM_ATTR04_CD
			 , ITEM_ATTR04_NM
			 , CUST_GRP_CD
			 , CUST_GRP_NM
			 , ITEM_CD
			 , ITEM_NM
			 , STAT_CD
			 , WEEK
			 , YYMMDD
			 , FKEY
			 , SUBSTRING(YYMMDD,1,4) AS YY
		 	 , SUBSTRING(YYMMDD,1,6) AS YYMM
			 , RESULT_SALES
		FROM M4S_I110400 T1
		 WHERE 1=1
			AND PROJECT_CD = 'ENT001'
			AND DATA_VRSN_CD = '20201228-20211226'
			AND DIVISION_CD = 'SELL_IN'
			AND FKEY LIKE '%' + 'C1-P3' + '%'
			AND CUST_GRP_CD = '1065'
		    AND ITEM_ATTR01_CD IN ('P1')
		    AND ITEM_ATTR02_CD IN ('P107')
		    AND ITEM_ATTR03_CD IN ('P107001')
  ) RESULT
  LEFT OUTER JOIN (
  				   SELECT STAT_CD
						, STAT_NM
					 FROM M4S_I103010
					WHERE 1=1
					  AND PROJECT_CD  = 'ENT001'
					  AND DIVISION_CD = 'FCST'
				  ) ALGO ON ( RESULT.STAT_CD = ALGO.STAT_CD )



select * from M4S_O110400
where 1=1
and item_Cd = '5141085'
and cust_grp_cd = '1017'

SELECT * FROM M4S_I002170
WHERE seq IN (SELECT * FROM M4S_I002061 WHERE SP1_CD = '1230')
  AND ITEM_CD IN (SELECT ITEM_CD FROM M4S_I002040 WHERE ITEM_ATTR01_CD = 'P1' AND USE_YN = 'Y')


SELECT * FROM M4S_I204020 WHERE LINK_SALES_MGMT_CD = '1173'

SELECT * FROM M4S_I002011 WHERE COMM_CD = ''


select * from m4s_I204020 WHERE SALES_MGMT_VRSN_ID = '202112_V0'

SELECT LINK_SALES_MGMT_CD AS CUST_CD
	  ,LINK_SALES_MGMT_NM AS CUST_NM
FROM M4S_I204020
WHERE 1=1
  AND PROJECT_CD = :VS_PROJECT_CD
  AND SALES_MGMT_VRSN_ID = (
  								SELECT SALES_MGMT_VRSN_ID
								FROM M4S_I204010
								WHERE 1=1
								  AND PROJECT_CD = :VS_PROJECT_CD
								  AND USE_YN = 'Y'
  							)
  AND SALES_MGMT_TYPE_CD = 'SP1'
  AND ATTR02_VAL = 'Y'

SELECT DISTINCT PLAN_YYMMDD, ATTR07, ATTR08 FROM M4S_O201001_NEW WHERE DP_VRSN_ID = 'SP_2022W01.02'
SELECT DISTINCT PLAN_YYMMDD, ATTR07, ATTR08 FROM M4S_O201002_NEW WHERE DP_VRSN_ID = 'SP_2022W01.02'

SELECT * FROM M4S_O201010

select * FROM M4S_I204023
/**********************************
  작성자 	: 박은진
  작성일자 	: 2021.09.14
  [TABLE]
  M4S_I002042 -- 신제품 관리
  M4S_I002040 -- 제품 관리

***********************************/

SELECT ITEM_CD
     , ITEM_NM
	 , 'search4.png' IMG
  FROM M4S_I002040 ITEM
 WHERE 1=1
   AND ITEM_TYPE_CD IN ('HAWA','FERT')
   AND USE_YN = 'Y'
   AND NEW_ITEM_YN = 'Y'
   AND ITEM_NM NOT LIKE '%삭%'
   AND ITEM_CD LIKE '%' + UPPER(@:VS_TB_SKU_CD) + '%'
 ORDER BY ITEM_CD


SELECT * from M4S_I204023


SELECT * FROM M4S_I002061 ORDER BY YYMMDD DESC


SELECT * FROM M4S_I002011 WHERE COMM_CD = 'ITEM_GUBUN02' AND ATTR01_VAL LIKE 'P1%' AND USE_YN = 'Y'


SELECT '2020' - 1

SELECT *
FROM M4S_O201010
WHERE 1=1
  AND PROJECT_CD = :VS_PROJECT_CD
  AND DP_VRSN_ID = :VS_CB_DP_VRSN_ID



SELECT ISSUE_BRAND.PROJECT_CD
--       ,YM.YYMM
      ,ISSUE_BRAND.SALES_MGMT_CD
--       ,COMM.COMM_DTL_CD_NM
      ,ISSUE_BRAND.ISSUE_CD
      ,ISSUE_BRAND.ISSUE_NM
--       ,ISNULL(SELL_OUT.DAY_01,0) DAY_01
--       ,ISNULL(SELL_OUT.DAY_02,0) DAY_02
--       ,ISNULL(SELL_OUT.DAY_03,0) DAY_03
--       ,ISNULL(SELL_OUT.DAY_04,0) DAY_04
--       ,ISNULL(SELL_OUT.DAY_05,0) DAY_05
--       ,ISNULL(SELL_OUT.DAY_06,0) DAY_06
--       ,ISNULL(SELL_OUT.DAY_07,0) DAY_07
--       ,ISNULL(SELL_OUT.DAY_08,0) DAY_08
--       ,ISNULL(SELL_OUT.DAY_09,0) DAY_09
--       ,ISNULL(SELL_OUT.DAY_10,0) DAY_10
--       ,ISNULL(SELL_OUT.DAY_11,0) DAY_11
--       ,ISNULL(SELL_OUT.DAY_12,0) DAY_12
--       ,ISNULL(SELL_OUT.DAY_13,0) DAY_13
--       ,ISNULL(SELL_OUT.DAY_14,0) DAY_14
--       ,ISNULL(SELL_OUT.DAY_15,0) DAY_15
--       ,ISNULL(SELL_OUT.DAY_16,0) DAY_16
--       ,ISNULL(SELL_OUT.DAY_17,0) DAY_17
--       ,ISNULL(SELL_OUT.DAY_18,0) DAY_18
--       ,ISNULL(SELL_OUT.DAY_19,0) DAY_19
--       ,ISNULL(SELL_OUT.DAY_20,0) DAY_20
--       ,ISNULL(SELL_OUT.DAY_21,0) DAY_21
--       ,ISNULL(SELL_OUT.DAY_22,0) DAY_22
--       ,ISNULL(SELL_OUT.DAY_23,0) DAY_23
--       ,ISNULL(SELL_OUT.DAY_24,0) DAY_24
--       ,ISNULL(SELL_OUT.DAY_25,0) DAY_25
--       ,ISNULL(SELL_OUT.DAY_26,0) DAY_26
--       ,ISNULL(SELL_OUT.DAY_27,0) DAY_27
--       ,ISNULL(SELL_OUT.DAY_28,0) DAY_28
--       ,ISNULL(SELL_OUT.DAY_29,0) DAY_29
--       ,ISNULL(SELL_OUT.DAY_30,0) DAY_30
--       ,ISNULL(SELL_OUT.DAY_31,0) DAY_31
  FROM M4S_I204023 ISSUE_BRAND
    FULL OUTER JOIN (
                        SELECT DISTINCT YYMM
                        FROM M4S_I002030
                        WHERE 1=1
                        AND PROJECT_CD = :VS_PROJECT_CD
                        AND YYMM IN (:VN_YYMM)
                    )  YM
      ON 1=1
    LEFT OUTER JOIN M4S_I002271 SELL_OUT
      ON SELL_OUT.PROJECT_CD = ISSUE_BRAND.PROJECT_CD
     AND SELL_OUT.SP1_CD = ISSUE_BRAND.SALES_MGMT_CD
     AND SELL_OUT.LV_1_CD = ISSUE_BRAND.DIVISION_CD
     AND SELL_OUT.LV_2_CD = ISSUE_BRAND.ISSUE_CD
     AND YM.YYMM = SELL_OUT.YYMM
--     JOIN M4S_I002011 COMM
--       ON ISSUE_BRAND.PROJECT_CD = COMM.PROJECT_CD
--      AND ISSUE_BRAND.DIVISION_CD = COMM.COMM_DTL_CD
--      AND COMM.COMM_CD = 'DF_LEVEL'
 WHERE 1=1
   AND ISSUE_BRAND.YYMM = :VS_YYMM
   AND ISSUE_BRAND.SALES_MGMT_CD     = :VS_SELECT ---
   AND ISSUE_BRAND.PROJECT_CD = :VS_PROJECT_CD


SELECT * FROM M4S_I002271 WHERE YYMM = '202201'


SELECT *
FROM M4S_I204023
WHERE PROJECT_CD = :VS_PROJECT_CD
AND SALES_MGMT_CD = :VS_SELECT
AND YYMM = :VS_YYMM


SELECT STUFF((
             SELECT ',' + ATTR03_VAL
                FROM M4S_I002011
                WHERE 1=1
                  AND PROJECT_CD = :VS_P_PROJECT_CD
                  AND COMM_CD = 'ITEM_GUBUN02'
                  AND USE_YN = 'Y'
                  AND COMM_DTL_CD IN (:VS_CB_LINE_CD)
                  AND ATTR03_VAL IS NOT NULL
             FOR XML PATH('')
        ),1,1,'')



SELECT STRING_AGG(T1.ATTR03_VAL,',') WITHIN GROUP(ORDER BY T1.ATTR03_VAL) AS SP2_CD
FROM (
        SELECT ATTR03_VAL
          FROM M4S_I002011
         WHERE 1=1
           AND PROJECT_CD = :VS_P_PROJECT_CD
           AND COMM_CD = 'ITEM_GUBUN02'
           AND USE_YN = 'Y'
           AND COMM_DTL_CD IN (:VS_CB_LINE_CD)
           AND ATTR03_VAL IS NOT NULL
    ) T1


SELECT DISTINCT T1.SALES_MGMT_CD, T1.SALES_MGMT_NM FROM M4S_I204030 T1
 LEFT JOIN M4S_I204050 T2
ON T1.PROJECT_CD = T2.PROJECT_CD
AND T1.SALES_MGMT_VRSN_ID = T2.SALES_MGMT_VRSN_ID
AND T1.SALES_MGMT_CD = T2.SALES_MGMT_CD
WHERE T1.SALES_MGMT_VRSN_ID = '202112_V0'
AND LEFT(T1.SALES_MGMT_CD,4) = '1111'
AND SALES_MGMT_TYPE_CD = 'SP1'
AND T2.SALES_MGMT_CD IS NULL
AND T1.USE_YN = 'Y'



SELECT FORMAT(DATEADD(MONTH, -12, RIGHT(DATA_VRSN_CD, 8)) + 1, 'yyyyMMdd')
    , DATA_VRSN_CD
FROM M4S_I110420



/**********************************
  작성자  	: 박은진
  작성일자 	: 2021.09.30
  [TABLE]
 M4S_I002175 -- 실적
 M4S_I110400 -- 수요예측 결과
 M4S_I103010 -- 알고리즘 관리
***********************************/
SELECT T1.DIVISION_CD
	, T1.ITEM_ATTR01_CD
	, T1.ITEM_ATTR01_NM
	, T1.ITEM_ATTR02_CD
	, T1.ITEM_ATTR02_NM
	, T1.ITEM_ATTR03_CD
	, T1.ITEM_ATTR03_NM
	, T1.ITEM_ATTR04_CD
	, T1.ITEM_ATTR04_NM
	, T1.ITEM_CD
	, T1.ITEM_NM
	, T1.CUST_GRP_CD
	, T1.CUST_GRP_NM
	, '실적' as GUBUN
	, '실적' as STAT_CD
    , '실적' as STAT_NM
	, T1.WEEK
	, CAL.YYMMDD
	, SUBSTRING(CAL.YYMMDD,1,4) AS YY
	, SUBSTRING(CAL.YYMMDD,1,6) AS YYMM
	, ISNULL(T1.RST_SALES_QTY,0) AS 실적
	, :VS_CB_LVL FKEY
FROM M4S_I002175 T1-- 실적
	JOIN M4S_I002030 CAL
	   ON T1.YYMMDD = CAL.YY
	  AND T1.WEEK = CAL.WEEK
	  AND CAL.START_WEEK_DAY = CAL.YYMMDD
WHERE 1=1
  AND T1.PROJECT_CD = :VS_P_PROJECT_CD
  AND T1.DIVISION_CD = :VS_CB_DIVISION
  AND T1.CUST_GRP_CD = :VS_CB_SP1
  AND T1.ITEM_ATTR01_CD IN (@:VS_CB_BIZ)
  AND T1.ITEM_ATTR02_CD IN (@:VS_CB_LINE)
  AND T1.ITEM_ATTR03_CD IN (@:VS_CB_BRAND)
  AND CAL.YYMMDD BETWEEN FORMAT(DATEADD(MONTH, -11, RIGHT(:VS_CB_DATA_VRSN, 8)) + 1, 'yyyyMMdd') AND RIGHT(:VS_CB_DATA_VRSN, 8)

UNION All

SELECT DIVISION_CD
	 , RESULT.ITEM_ATTR01_CD
	 , RESULT.ITEM_ATTR01_NM
	 , RESULT.ITEM_ATTR02_CD
	 , RESULT.ITEM_ATTR02_NM
	 , RESULT.ITEM_ATTR03_CD
	 , RESULT.ITEM_ATTR03_NM
	 , RESULT.ITEM_ATTR04_CD
	 , RESULT.ITEM_ATTR04_NM
	 , RESULT.ITEM_CD
	 , RESULT.ITEM_NM
	 , RESULT.CUST_GRP_CD
	 , RESULT.CUST_GRP_NM
	 , '예측' as GUBUN
	 , RESULT.STAT_CD
     , ALGO.STAT_NM
     , RESULT.WEEK
     , RESULT.YYMMDD
	 , YY
	 , YYMM
	 , RESULT.RESULT_SALES AS 실적
	 , RESULT.FKEY
FROM (
		SELECT DIVISION_CD
			 , ITEM_ATTR01_CD
			 , ITEM_ATTR01_NM
			 , ITEM_ATTR02_CD
			 , ITEM_ATTR02_NM
			 , ITEM_ATTR03_CD
			 , ITEM_ATTR03_NM
			 , ITEM_ATTR04_CD
			 , ITEM_ATTR04_NM
			 , CUST_GRP_CD
			 , CUST_GRP_NM
			 , ITEM_CD
			 , ITEM_NM
			 , STAT_CD
			 , WEEK
			 , YYMMDD
			 , FKEY
			 , SUBSTRING(YYMMDD,1,4) AS YY
		 	 , SUBSTRING(YYMMDD,1,6) AS YYMM
			 , RESULT_SALES
		FROM M4S_I110400 T1 -- 수요예측 결과
		 WHERE 1=1
			AND PROJECT_CD = :VS_P_PROJECT_CD
			AND DATA_VRSN_CD = :VS_CB_DATA_VRSN
			AND DIVISION_CD = :VS_CB_DIVISION
			AND FKEY LIKE '%' + :VS_CB_LVL + '%'
			AND CUST_GRP_CD = :VS_CB_SP1
		    AND ITEM_ATTR01_CD IN (@:VS_CB_BIZ)
		    AND ITEM_ATTR02_CD IN (@:VS_CB_LINE)
		    AND ITEM_ATTR03_CD IN (@:VS_CB_BRAND)
  ) RESULT
  LEFT OUTER JOIN (
  				   SELECT STAT_CD
						, STAT_NM
					 FROM M4S_I103010 -- 알고리즘명 추출
					WHERE 1=1
					  AND PROJECT_CD  = :VS_P_PROJECT_CD
					  AND DIVISION_CD = 'FCST'
				  ) ALGO ON ( RESULT.STAT_CD = ALGO.STAT_CD )
