/*
AUD W/F 호출 이벤트 등록
작성자 BA팀
*/


/*********************************************************
사용자 지정이 필요한 Parameter 목록입니다.
이 곳을 수정하면 이후는 onClick 이벤트 발생 시 정의된 함수들에 의해 
이 설정값들에 따라 알아서 실행됩니다.  
(UI 개발자의 편의를 위해 전역으로 맨 위로 뺐습니다)
매뉴얼을 보면 알아야 될 변수들이 많았는데, 
아래에서 설정하는 변수들 외에는 알 필요 없고 
나머지 URL, RequestID, SessionID  등은 규칙에 의해 자동 생성되므로 신경쓰지 마세요
*********************************************************/

// 현재 접속중인 호스트 URL 과 일치시키기 - CORS 피하기
//var host_url = window.location.protocol + '//' + window.location.host ;
//var wc_url = Matrix.getObject('WebContainer_arc').URL ;
//var wc_host = wc_url.split('/')[0] + '//' + wc_url.split('/')[2] ;
//Matrix.getObject('WebContainer_arc').URL = wc_url.replace(wc_host, host_url);

// 차세정 UI 전용 변수
//var arcodian_src = Matrix.getObject('WebContainer_arc').ElementFrame.contentDocument ;
//var arcodian_selector = arcodian_src.querySelector ;

// X. 신경쓰지 마세요 !!!! 내부(EXECUTE 버튼 onClick 이벤트)에서 사용되는 call 변수를 전역으로 선언하는 부분입니다. 
var call;


// 0. W/F 실행 모드를 설정합니다. 
var mode = 'AC'	// AC or EX

// 1. 관리자 페이지(iMgt)에서 호출할 W/F 의 REP ID 를 가져오셔서 문자열 위치에  붙여주세요
var worflowId = "REP3C49795D7C0F44E8AEEC2EEF06EDBDBB"; 


// 2. 해당 W/F 호출 시 넘겨줄 실행 옵션들을 여기에 지정합니다. 적절한 값으로 바꾸고 실행해주세요
var content={
	"workflow_id": "", 							// 0. 위에서 입력한 workflowId 가 여기 할당됩니다.
	"parallel_degree":1,						// 1. 실행 버튼 누르면 보이던 그것입니다
	"input_data": { 							// 2. W/F 내 전역 변수를 지정합니다
		"NOF_ROWS": "", 					// 	- VAR 노드에 지정하는 것과 같은 효과를 줍니다
		"NOF_COLS": "",				// 	- 여기 지정된 이름과 W/F 내 VAR 노드에 지정된 이름이 겹치면 W/F 가 아닌 여기서 지정된 값으로 들어갑니다
		"VAL": "" 						// 	- AUD UI 상의 입력 필드 값을 동적으로 받아오려면 여기 말고 아래에서 수정해
	},
	"request_output_data": { 					// 3. W/F 실행 결과로 산출된 데이터들 중 받아올 데이터들을 지정합니다 : 복수 지정 가능 
		"R01": {								//	- 가져온 결과물에 접근할 수 있도록 키값을 지정합니다. (python 의 dict 의 키값 생각하시면 됩니다)
			"node_key": "PYTHON_SCRIPT", 		//	- W/F 상의 어떤 노드에서 가져올 지
			"result_key": "ret", 				//	- 그 노드 안에서 어떤 결과물을 가져올 지
			"result_type_cd": "DS_IS"}			//	- 가져온 데이터의 타입이 무엇인 지
	}
};


// 3. 실행 옵션들 중 상수가 아닌, 
// AUD UI 상에서 사용자가 입력한 값을 사용해야 할 경우
// 여기서 AUD 문서 내 어떤 필드의 값을 가져올 지 설정합니다
content.workflow_id = worflowId;		// 실제 할당문입니다.
//content.input_data.NORMALIZE_YN = arcodian_selector('document');
//content.input_data.NORMALIZE_YN= Matrix.getObject("NORMALIZE_YN").Checked;				// AUD 문서 내 입력 필드들 중 ID=NOF_ROWS 에 지정된 값을 가져옵니다.
//content.input_data.NORMALIZE_DIV_NUM= Matrix.getObject("NORMALIZE_DIV_NUM").Text;	// AUD 문서 내 입력 필드들 중 ID=NOF_COLS 에 지정된 값을 가져옵니다.
//content.input_data.RESIZE_YN= Matrix.getObject("RESIZE_YN").Checked;					// AUD 문서 내 입력 필드들 중 ID=VALUE 에 지정된 값을 가져옵니다.
//content.input_data.RESIZE_WIDTH= Matrix.getObject("RESIZE_WIDTH").Text;
//content.input_data.RESIZE_HEIGHT= Matrix.getObject("RESIZE_HEIGHT").Text;
//content.input_data.SMOOTH_YN= Matrix.getObject("SMOOTH_YN").Checked;
//content.input_data.SMOOTH_METHOD= Matrix.getObject("SMOOTH_METHOD").Value;
//content.input_data.SMOOTH_KERNEL_SIZE= Matrix.getObject("SMOOTH_KERNEL_SIZE").Text;
//content.input_data.ONEHOT_YN= Matrix.getObject("ONEHOT_YN").Checked;


// 4. UI 내 각 버튼마다 onClick 이벤트를 등록합니다.
 var OnButtonClick  = function(sender, args)
 {
 	/*****************************************
	* <주석 원문> 버튼 컨트롤이 클릭되는 시점에 발생합니다.
	* * arguments :  
	*		 string	Id (Readonly:False) : 컨트롤이름 
	*		 string	Text (Readonly:False) : 라벨 값 
	*****************************************/
  	if(args.Id == "execute"){			// Name 이 btn_execute 인 버튼에 대한 onClick 이벤트로 btn_execute_f 함수를 등록합니다
		btn_execute(content);
	}
	else if(args.Id == "btn_clear"){		// Name 이 btn_clear 인 버튼에 대한 onClick 이벤트로 clearCtrls 함수를 등록합니다
		clearCtrls();
	}else if(args.Id == "btn_predictHis"){	// Name 이 btn_predictHis 인 버튼에 대한 onClick 이벤트로 Matrix.ShowWindow 메서드를 등록합니다
		Matrix.ShowWindow("Form2", 0, 0, 1230, 830, "True", "True", "예측 이력", "", "white", 1);
	}
	// 위와 같은 방식으로 else if 블록을 추가하여 원하시는 다른 버튼에도 작성하신 함수를 등록해주세요
 };

var btn_execute = function(content) {
	content.workflow_id = worflowId;													// 실제 할당문입니다.
	// Arcodian 영역에서 전처리 Parameter 영역 추출
//	var area = Matrix.getObject('WebContainer_arc').ElementFrame.contentDocument.querySelector('section.acc-content-inner#data_preprocessing_result')
	
	content.input_data.NOF_COLS = Matrix.getObject('NOF_COLS').Text ;
	content.input_data.NOF_ROWS = Matrix.getObject('NOF_ROWS').Text ;
	content.input_data.VAL = "'" + Matrix.getObject('VAL').Text + "'" ;
	console.log(content) ;
	btn_execute_f(content) ;
} ;

// 5. 각 버튼마다 등록할 onClick 이벤트 함수들을 여기 작성합니다. ( 함수의 목적 상 하드코딩이 있어도 정상참작 가능한 영역.. )
clearCtrls=function(){
		Matrix.getObject("NOF_ROWS").Text = "";
		Matrix.getObject("NOF_COLS").Text = "";
		Matrix.getObject("VALUE").Text = "";
		Matrix.getObject("rtxt_result").Text = "";
		Matrix.getObject("rtxt_log").Text = "";
//		Matrix.getObject("forecast_DataGrid").ClearData();
//		Matrix.getObject("wcc").URL="http://192.168.0.40:8085/matrix/iWorkflow/resources/images/login/login_logo.png";
//		Matrix.doRefresh("wcc");
}

btn_execute_f=function(content){
	//clearCtrls();
	
	var date = new Date();
	date = getFormatDate(date);
	
	var RandVal = randomRange(1, 9999);
	var requestId = RandVal + "_" + date;
	//alert(requestId);
	
	call = new CallStreamWorkflowAcMode(content.workflow_id, requestId, content.input_data, content.request_output_data, content.parallel_degree );
	call.executeIstream( 
		function(res){

			var resultJson=eval("("+res+")");
			Matrix.getObject("rtxt_result").Text = res;
			
//			var img_url = resultJson.R01;
			var dataset = resultJson.R01;
		
//			Matrix.getObject("wcc").URL = img_url;
//			Matrix.doRefresh("wcc");
	
			DrawDSIStoGrid("ResultDataGrid", dataset);

		}, function(msg){
			//-- callback for _ws
			//-- user code goes here
			// 호출 하고 상태 메시지 핸들러를 작성한다. 
			Matrix.getObject("rtxt_log").Text = msg +"\n" + Matrix.getObject("rtxt_log").Text+"\n"  ;
		}
	);
}


// 6. 전체 문서 로드 및 필드의 AutoRefresh 이벤트 종료 시 발생하는 이벤트의 내용을 작성합니다.
var OnLoadComplete  = function(sender, args)
 {
 	/*****************************************
	* <주석 원문> 문서가 로드되고 AutoRefresh가 완료되는 시점에 발생합니다.
	* * arguments :  
	*		 bool	Success (Readonly:False) : 성공여부 
	*		 string	Message (Readonly:False) : 에러 메시지 
	*****************************************/
  	Matrix.doRefresh("NOF_ROWS");
 	Matrix.doRefresh("NOF_COLS");
 	Matrix.doRefresh("VALUE");
//	Matrix.getObject("wcc").URL="http://192.168.0.40:8085/matrix/iWorkflow/resources/images/login/login_logo.png";
//	Matrix.doRefresh("wcc");
	btn_execute_f();
 };



/****************************************이 아래는 신경쓰지 마세요 !!!! (함수 정의부)****************************************/



/*****************************************
* i-STREAM의 특정 workflow를 호출하고자 할 때 호출하는 내부 함수 
* * arguments :  
*		 string workflowId (Readonly:True)  : 호출할 workflow의 report_code 
*		 string	requestId (Readonly:True)   : 실행건을 식별할 수 있는 실행별 고유한 키값 
*		 object	inputData (Readonly:True)   : workflow에 전달할 데이터 JSON object 
*		 object	requestOutputData (Readonly:True) : RowIndex 종료값 
*		 int	parallelDegree (Readonly:True) : parallel Degree
*****************************************/
var CallStreamWorkflowAcMode  = function(workflowId, requestId, inputData, requestOutputData, parallelDegree)
 {
		// 전역변수 CONTEXT_PATH 파싱해서 관련 url 생성하기 
		// _wsUrl, _exeUrl, _killUrl => i-STREAM 서버의 ip와 port로 설정
		// API로 받아오기 	
		var parser = document.createElement('a');
		parser.href = CONTEXT_PATH.charAt(CONTEXT_PATH.length-1) == '/' ? CONTEXT_PATH : CONTEXT_PATH + '/' ;
		var _wsUrl =  parser.href.replace(/http/i,'ws') + 'ws/getExecuteMsg' ; // 처음 등장하는 http만 ws로 바꿈. https=>wss , http=>ws
//		var _exeUrl = 'http://192.168.0.50:8080/reports/FLDE565507A7FB3483BB7AB51E39E15E991/REPD437532C120B4C63A53BCB86325D62B2.mts'
		var _exeUrl = parser.href + 'exec/execJob.mts' ;
		var _killUrl = parser.href + 'exec/kill.mts' ;
		
		console.info('Web Socket URL: %s', _wsUrl);
		console.info('Execution Call URL: %s', _exeUrl);
		console.info('Cancellation URL: %s', _killUrl);
		
		// 멤버변수 선언 
		var _xmlhttp = null;
		var _popupConsole = null;
		var _ws = null;

		var _mode = mode;

		function _callAjax(url, params, callback){
			_xmlhttp = null;
			
			if (window.XMLHttpRequest){
				_xmlhttp = new XMLHttpRequest();
			}else{
				_xmlhttp = new ActiveXObject("Microsoft._xmlhttp");
			}`
			
			_xmlhttp.onreadystatechange = function(){		
				if (_xmlhttp.readyState == 4 && _xmlhttp.status == 200){
						callback(_xmlhttp.responseText);
				}
			}
			_xmlhttp.open("POST", url, true);
			_xmlhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
			_xmlhttp.send(params);
		};
		
		//i-STREAM 진행사항을 실시간으로 보기 위한 Websocket connection (IE 10 이상, Chrome 16이상)
		function _connectWebsocket(callbackFunc){
			if(typeof(WebSocket)==="function"){	
				var WS = window['MozWebSocket'] ? MozWebSocket : WebSocket;
				_ws = new WS(_wsUrl);

				_ws.onopen = function(){
                    callbackFunc("websocket connected");
				};
				_ws.onerror = function (err) {
					alert(err);
				};
				_ws.onmessage = function(event){
                    
					// CANVAS 컨트롤에 i-STREAM 진행사항 메시지 작성
					// nodeName : JSON.parse(event.data).nodeName
					// nodeKey : JSON.parse(event.data).nodeKey
					// sessionId : JSON.parse(event.data).sessionId
					// message : JSON.parse(event.data).message
					// status : JSON.parse(event.data).status
					// elapsedTime : JSON.parse(event.data).elapsedTime
//					Matrix.getObject("rtxt_ws_info").Text += JSON.parse(event.data).message +"\n";
                    callbackFunc(JSON.parse(event.data).message);
				};	
				_ws.onclose = function(){
					//websocket connection이 닫힐 경우
//					Matrix.getObject("rtxt_ws_info").Text += "websocket closed";
                    callbackFunc("websocket closed");
				};
			}
		} ;
		
		//i-STREAM 서버로 특정 workflow 실행 호출 
		function _executeIstream(callbackFunc, statusFunc){
		
		    var jsonStr = JSON.stringify({"workflow_id": workflowId, "input_data": inputData, "request_output_data": requestOutputData, "parallel_degree": parallelDegree });
			var params = 'mode=' + _mode + '&content='+jsonStr+'&sessionId='+requestId;
            //-- execute workflow
            _callAjax(
				_exeUrl, 
				params, 
				function(res){
					if (res.indexOf("killed") < 0){
						_ws.close();
						callbackFunc(res);
					}
            	}
			);
            //-- connect websocket for watching status of the workflow executed
            _connectWebsocket(statusFunc)
		};
		
		function _killIstream(requestId){
			var params = 'sid='+requestId;
			_callAjax(_killUrl, params, function(res){
				if (res.indexOf("killed") > -1){
					_ws.close();
				}
			});
		};	
        
        this.executeIstream = _executeIstream
        this.killIstream = _killIstream
 };

function randomRange(n1, n2) {
  return Math.floor( (Math.random() * (n2 - n1 + 1)) + n1 );
}

function getFormatDate(date){
    var year = date.getFullYear();              //yyyy
    var month = (1 + date.getMonth());          //M
    month = month >= 10 ? month : '0' + month;  //month 두자리로 저장
    var day = date.getDate();                   //d
    day = day >= 10 ? day : '0' + day;          //day 두자리로 저장
    return  year + '' + month + '' + day;
}

/*****************************************
* 특정 workflow를 호출한 후 DS_IS 유형의 결과를 i-CANVAS6(i-AUD3)의 컨트롤에서 활용하기 위해 DataTable 형식으로 변환 
* * arguments :  
*		 object dsIsJsonObject (Readonly:True)  : DS_IS 유형의 결과 JSON object
*		 string tableName      (Readonly:True)  : CreateTable 함수의 두번째 인자 테이블명 
* * return :  
*		 DataTable dtTable                      : DataTable object 반환 
*****************************************/

DrawDSIStoGrid=function(ctlname, dataset){
		/**************************************************
		* reponse json format parsing
		**************************************************/
		var resGrid = Matrix.getObject(ctlname);
		var resData = Matrix.CreateDataSet();
			
		// 테이블 목록 작성
		var dtTables = resData.CreateTable("TABLES");
		var columns = [];
		
		//columns setting
		for(var c=0; c< dataset.columns.length; c++){
			dtTables.AddColumn(dataset.columns[c] ,false);
			columns.push(dataset.columns[c]);
		}
		
		for(var i=0; i<dataset.data.length; i++){
			var nRow = dtTables.AppendRow();
			
			for(var j=0; j<dataset.columns.length; j++){
				dtTables.setRowValue(nRow, dataset.columns[j], dataset.data[i][j]);
			}
		}
		dtTables.ClearRowState();
		resGrid.SetDataTable(1, dtTables);
		resGrid.Cleardataset(true);
		resGrid.ReDraw();
		
		Matrix.getObject("Chart").Draw();
}

